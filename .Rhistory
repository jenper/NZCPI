start = as.Date(start)
end = as.Date(end)
past = sapply(start, function(x) data[which.min(abs(x-data$Date)), 'CPI_Index'])
current = sapply(end, function(x) data[which.min(abs(x-data$Date)), 'CPI_Index'])
worth = round(amount*current/past,2)
if (length(amount) <= 1 & length(start) & full == TRUE){
return(paste(amount, 'dollars in', start, 'would have the same purchasing power as', worth, 'dollars in', end))
}else{
return(worth)
}
}
apply_cpi(start=c('2021-01-01','2022-01-01'), end=c('2022-01-01','2022-03-01'))
#More recent dollars in terms of past dollars = Dollar Amount × Beginning-period CPI ÷ Ending-period CPI.
#vectors and single
#check only numeric
#pass in amoutn and dates and df, full=FALSE
#apply_cpi(c(100,200,'+100.11'))
apply_cpi <- function(amount=100, start = data[1,1], end = data[nrow(data),1], data = nz_cpi_df(), full = TRUE){
ifelse((is.na(lubridate::ymd(start)) | is.na(lubridate::ymd(end))), stop("Invalid data type - check input is in date format 'YYYY-MM-DD'"), c(start,end))
ifelse((start < data[1,1] | end > data[nrow(data),1]), warning("Out of data date range."), c(start, end))
ifelse(is.na(as.numeric(amount)), stop("Check value to convert is numeric type"), amount)
amount = as.numeric(amount)
start = as.Date(start)
end = as.Date(end)
past = sapply(start, function(x) data[which.min(abs(x-data$Date)), 'CPI_Index'])
current = sapply(end, function(x) data[which.min(abs(x-data$Date)), 'CPI_Index'])
worth = round(amount*current/past,2)
if (length(amount) <= 1 & length(start) <= 1 & full == TRUE){
return(paste(amount, 'dollars in', start, 'would have the same purchasing power as', worth, 'dollars in', end))
}else{
return(worth)
}
}
apply_cpi(start=c('2021-01-01','2022-01-01'), end=c('2022-01-01','2022-03-01'))
#More recent dollars in terms of past dollars = Dollar Amount × Beginning-period CPI ÷ Ending-period CPI.
#vectors and single
#check only numeric
#pass in amoutn and dates and df, full=FALSE
#apply_cpi(c(100,200,'+100.11'))
apply_cpi <- function(amount=100, start = data[1,1], end = data[nrow(data),1], data = nz_cpi_df(), full = TRUE){
ifelse((is.na(lubridate::ymd(start)) | is.na(lubridate::ymd(end))), stop("Invalid data type - check input is in date format 'YYYY-MM-DD'"), c(start,end))
ifelse((start < data[1,1] | end > data[nrow(data),1]), warning("Out of data date range."), c(start, end))
ifelse(is.na(as.numeric(amount)), stop("Check value to convert is numeric type"), amount)
amount = as.numeric(amount)
start = as.Date(start)
end = as.Date(end)
past = sapply(start, function(x) data[which.min(abs(x-data$Date)), 'CPI_Index'])
current = sapply(end, function(x) data[which.min(abs(x-data$Date)), 'CPI_Index'])
if (past == 0){
past = 0.1
}
worth = round(amount*current/past,2)
if (length(amount) <= 1 & length(start) <= 1 & length(end) <= 1 & full == TRUE){
return(paste(amount, 'dollars in', start, 'would have the same purchasing power as', worth, 'dollars in', end))
}else{
return(worth)
}
}
apply_cpi(start=c('2021-01-01','2022-01-01'), end=c('2022-01-01','2022-03-01'))
apply_cpi <- function(amount=100, start = data[1,1], end = data[nrow(data),1], data = nz_cpi_df(), full = TRUE){
ifelse((is.na(lubridate::ymd(start)) | is.na(lubridate::ymd(end))), stop("Invalid data type - check input is in date format 'YYYY-MM-DD'"), c(start,end))
ifelse((start < data[1,1] | end > data[nrow(data),1]), warning("Out of data date range."), c(start, end))
ifelse(is.na(as.numeric(amount)), stop("Check value to convert is numeric type"), amount)
amount = as.numeric(amount)
start = as.Date(start)
end = as.Date(end)
past = sapply(start, function(x) data[which.min(abs(x-data$Date)), 'CPI_Index'])
current = sapply(end, function(x) data[which.min(abs(x-data$Date)), 'CPI_Index'])
ifelse(past == 0, past = 0.1, past)
worth = round(amount*current/past,2)
if (length(amount) <= 1 & length(start) <= 1 & length(end) <= 1 & full == TRUE){
return(paste(amount, 'dollars in', start, 'would have the same purchasing power as', worth, 'dollars in', end))
}else{
return(worth)
}
}
apply_cpi(start=c('2021-01-01','2022-01-01'), end=c('2022-01-01','2022-03-01'))
apply_cpi <- function(amount=100, start = data[1,1], end = data[nrow(data),1], data = nz_cpi_df(), full = TRUE){
ifelse((is.na(lubridate::ymd(start)) | is.na(lubridate::ymd(end))), stop("Invalid data type - check input is in date format 'YYYY-MM-DD'"), c(start,end))
ifelse((start < data[1,1] | end > data[nrow(data),1]), warning("Out of data date range."), c(start, end))
ifelse(is.na(as.numeric(amount)), stop("Check value to convert is numeric type"), amount)
amount = as.numeric(amount)
start = as.Date(start)
end = as.Date(end)
past = sapply(start, function(x) data[which.min(abs(x-data$Date)), 'CPI_Index'])
current = sapply(end, function(x) data[which.min(abs(x-data$Date)), 'CPI_Index'])
ifelse(past == 0, past <- 0.1, past)
worth = round(amount*current/past,2)
if (length(amount) <= 1 & length(start) <= 1 & length(end) <= 1 & full == TRUE){
return(paste(amount, 'dollars in', start, 'would have the same purchasing power as', worth, 'dollars in', end))
}else{
return(worth)
}
}
apply_cpi(start=c('2021-01-01','2022-01-01'), end=c('2022-01-01','2022-03-01'))
#More recent dollars in terms of past dollars = Dollar Amount × Beginning-period CPI ÷ Ending-period CPI.
#vectors and single
#check only numeric
#pass in amoutn and dates and df, full=FALSE
#apply_cpi(c(100,200,'+100.11'))
apply_cpi <- function(amount=100, start = data[1,1], end = data[nrow(data),1], data = nz_cpi_df(), full = TRUE){
ifelse((is.na(lubridate::ymd(start)) | is.na(lubridate::ymd(end))), stop("Invalid data type - check input is in date format 'YYYY-MM-DD'"), c(start,end))
ifelse((start < data[1,1] | end > data[nrow(data),1]), warning("Out of data date range."), c(start, end))
ifelse(is.na(as.numeric(amount)), stop("Check value to convert is numeric type"), amount)
amount = as.numeric(amount)
start = as.Date(start)
end = as.Date(end)
past = sapply(start, function(x) data[which.min(abs(x-data$Date)), 'CPI_Index'])
current = sapply(end, function(x) data[which.min(abs(x-data$Date)), 'CPI_Index'])
ifelse((past == 0), past <- 0.1, past)
worth = round(amount*current/past,2)
if (length(amount) <= 1 & length(start) <= 1 & length(end) <= 1 & full == TRUE){
return(paste(amount, 'dollars in', start, 'would have the same purchasing power as', worth, 'dollars in', end))
}else{
return(worth)
}
}
apply_cpi(start=c('2021-01-01','2022-01-01'), end=c('2022-01-01','2022-03-01'))
#More recent dollars in terms of past dollars = Dollar Amount × Beginning-period CPI ÷ Ending-period CPI.
#vectors and single
#check only numeric
#pass in amoutn and dates and df, full=FALSE
#apply_cpi(c(100,200,'+100.11'))
apply_cpi <- function(amount=100, start = data[1,1], end = data[nrow(data),1], data = nz_cpi_df(), full = TRUE){
ifelse((is.na(lubridate::ymd(start)) | is.na(lubridate::ymd(end))), stop("Invalid data type - check input is in date format 'YYYY-MM-DD'"), c(start,end))
ifelse((start < data[1,1] | end > data[nrow(data),1]), warning("Out of data date range."), c(start, end))
ifelse(is.na(as.numeric(amount)), stop("Check value to convert is numeric type"), amount)
amount = as.numeric(amount)
start = as.Date(start)
end = as.Date(end)
past = sapply(start, function(x) data[which.min(abs(x-data$Date)), 'CPI_Index'])
current = sapply(end, function(x) data[which.min(abs(x-data$Date)), 'CPI_Index'])
ifelse((past == 0), past = 0.1, past)
worth = round(amount*current/past,2)
if (length(amount) <= 1 & length(start) <= 1 & length(end) <= 1 & full == TRUE){
return(paste(amount, 'dollars in', start, 'would have the same purchasing power as', worth, 'dollars in', end))
}else{
return(worth)
}
}
apply_cpi(start=c('2021-01-01','2022-01-01'), end=c('2022-01-01','2022-03-01'))
apply_cpi <- function(amount=100, start = data[1,1], end = data[nrow(data),1], data = nz_cpi_df(), full = TRUE){
ifelse((is.na(lubridate::ymd(start)) | is.na(lubridate::ymd(end))), stop("Invalid data type - check input is in date format 'YYYY-MM-DD'"), c(start,end))
ifelse((start < data[1,1] | end > data[nrow(data),1]), warning("Out of data date range."), c(start, end))
ifelse(is.na(as.numeric(amount)), stop("Check value to convert is numeric type"), amount)
amount = as.numeric(amount)
start = as.Date(start)
end = as.Date(end)
past = sapply(start, function(x) data[which.min(abs(x-data$Date)), 'CPI_Index'])
current = sapply(end, function(x) data[which.min(abs(x-data$Date)), 'CPI_Index'])
ifelse(past == 0, past <- 0.1, past)
worth = round(amount*current/past,2)
if (length(amount) <= 1 & length(start) <= 1 & length(end) <= 1 & full == TRUE){
return(paste(amount, 'dollars in', start, 'would have the same purchasing power as', worth, 'dollars in', end))
}else{
return(worth)
}
}
apply_cpi(start=c('2021-01-01','2022-01-01'), end=c('2022-01-01','2022-03-01'))
#More recent dollars in terms of past dollars = Dollar Amount × Beginning-period CPI ÷ Ending-period CPI.
#vectors and single
#check only numeric
#pass in amoutn and dates and df, full=FALSE
#apply_cpi(c(100,200,'+100.11'))
apply_cpi <- function(amount=100, start = data[1,1], end = data[nrow(data),1], data = nz_cpi_df(), full = TRUE){
ifelse((is.na(lubridate::ymd(start)) | is.na(lubridate::ymd(end))), stop("Invalid data type - check input is in date format 'YYYY-MM-DD'"), c(start,end))
ifelse((start < data[1,1] | end > data[nrow(data),1]), warning("Out of data date range."), c(start, end))
ifelse(is.na(as.numeric(amount)), stop("Check value to convert is numeric type"), amount)
amount = as.numeric(amount)
start = as.Date(start)
end = as.Date(end)
past = sapply(start, function(x) data[which.min(abs(x-data$Date)), 'CPI_Index'])
current = sapply(end, function(x) data[which.min(abs(x-data$Date)), 'CPI_Index'])
ifelse(past == 0, past <- 0.1, past)
worth = round(amount*current/past,2)
if (length(amount) <= 1 & length(start) <= 1 & length(end) <= 1 & full == TRUE){
return(paste(amount, 'dollars in', start, 'would have the same purchasing power as', worth, 'dollars in', end))
}else{
return(worth)
}
}
apply_cpi(start=c('2021-01-01','2022-01-01'), end=c('2022-01-01','2022-03-01','2022-06-01'))
#More recent dollars in terms of past dollars = Dollar Amount × Beginning-period CPI ÷ Ending-period CPI.
#vectors and single
#check only numeric
#pass in amoutn and dates and df, full=FALSE
#apply_cpi(c(100,200,'+100.11'))
perc_change_cpi <- function(start = data[1,1], end = data[nrow(data),1], data = nz_cpi_df()){
if (is.na(lubridate::ymd(start)) | is.na(lubridate::ymd(end))){
stop("Invalid data type - check input is in date format 'YYYY-MM-DD'")
}
if (start < data[1,1]| end > data[nrow(data),1]){
warning("Out of data date range.")
}
start = as.Date(start)
end = as.Date(end)
v1 = data[which.min(abs(start-data$Date)), 'CPI_Index']
v2 = data[which.min(abs(end-data$Date)), 'CPI_Index']
if (v1 == 0) {
cpi_change = paste('Unable to calculate percentage change as unable to divide by zero (CPI value is 0 in', start, ')')
}else{
change = ((v2-v1)/v1)*100
cpi_change = paste('The NZ CPI Index changed by', round(change,2), 'percent between', start, 'and', end)
}
return(cpi_change)
}
perc_change_cpi(start=c('2021-01-01','2022-01-01'), end=c('2022-01-01','2022-03-01','2022-06-01'))
perc_change_cpi <- function(start = data[1,1], end = data[nrow(data),1], data = nz_cpi_df()){
ifelse((length(start) > 1 | length(end) > 1), stop('Error multiple values. Please only input one start and one end value', c(start,end))
if (is.na(lubridate::ymd(start)) | is.na(lubridate::ymd(end))){
perc_change_cpi <- function(start = data[1,1], end = data[nrow(data),1], data = nz_cpi_df()){
ifelse((length(start) > 1 | length(end) > 1), stop('Error multiple values. Please only input one start and one end value', c(start,end))
if (is.na(lubridate::ymd(start)) | is.na(lubridate::ymd(end))){
perc_change_cpi <- function(start = data[1,1], end = data[nrow(data),1], data = nz_cpi_df()){
ifelse((length(start) > 1 | length(end) > 1), stop('Error multiple values. Please only input one start and one end value'), c(start,end))
if (is.na(lubridate::ymd(start)) | is.na(lubridate::ymd(end))){
stop("Invalid data type - check input is in date format 'YYYY-MM-DD'")
}
if (start < data[1,1]| end > data[nrow(data),1]){
warning("Out of data date range.")
}
start = as.Date(start)
end = as.Date(end)
v1 = data[which.min(abs(start-data$Date)), 'CPI_Index']
v2 = data[which.min(abs(end-data$Date)), 'CPI_Index']
if (v1 == 0) {
cpi_change = paste('Unable to calculate percentage change as unable to divide by zero (CPI value is 0 in', start, ')')
}else{
change = ((v2-v1)/v1)*100
cpi_change = paste('The NZ CPI Index changed by', round(change,2), 'percent between', start, 'and', end)
}
return(cpi_change)
}
perc_change_cpi(start=c('2021-01-01','2022-01-01'), end=c('2022-01-01','2022-03-01','2022-06-01'))
perc_change_cpi <- function(start = data[1,1], end = data[nrow(data),1], data = nz_cpi_df()){
ifelse((length(start) > 1 | length(end) > 1), stop('Error multiple values. Please only input one start and one end value'), c(start,end))
if (is.na(lubridate::ymd(start)) | is.na(lubridate::ymd(end))){
stop("Invalid data type - check input is in date format 'YYYY-MM-DD'")
}
if (start < data[1,1]| end > data[nrow(data),1]){
warning("Out of data date range.")
}
start = as.Date(start)
end = as.Date(end)
v1 = data[which.min(abs(start-data$Date)), 'CPI_Index']
v2 = data[which.min(abs(end-data$Date)), 'CPI_Index']
if (v1 == 0) {
cpi_change = paste('Unable to calculate percentage change as unable to divide by zero (CPI value is 0 in', start, ')')
}else{
change = ((v2-v1)/v1)*100
cpi_change = paste('The NZ CPI Index changed by', round(change,2), 'percent between', start, 'and', end)
}
return(cpi_change)
}
perc_change_cpi(start=c('2021-01-01','2022-01-01'), end=c('2022-01-01','2022-03-01'))
perc_change_cpi <- function(start = data[1,1], end = data[nrow(data),1], data = nz_cpi_df()){
ifelse((length(start) > 1 | length(end) > 1), stop('Error multiple values. Please only input one start and one end value'), c(start,end))
if (is.na(lubridate::ymd(start)) | is.na(lubridate::ymd(end))){
stop("Invalid data type - check input is in date format 'YYYY-MM-DD'")
}
if (start < data[1,1]| end > data[nrow(data),1]){
warning("Out of data date range.")
}
start = as.Date(start)
end = as.Date(end)
v1 = data[which.min(abs(start-data$Date)), 'CPI_Index']
v2 = data[which.min(abs(end-data$Date)), 'CPI_Index']
if (v1 == 0) {
cpi_change = paste('Unable to calculate percentage change as unable to divide by zero (CPI value is 0 in', start, ')')
}else{
change = ((v2-v1)/v1)*100
cpi_change = paste('The NZ CPI Index changed by', round(change,2), 'percent between', start, 'and', end)
}
return(cpi_change)
}
perc_change_cpi(start=c('2021-01-01'), end=c('2022-01-01'))
#change cpi between two dates
#perc_change_cpi('1998-09-01','1999-01-01') negative perc
perc_change_cpi <- function(start = data[1,1], end = data[nrow(data),1], data = nz_cpi_df()){
ifelse((length(start) > 1 | length(end) > 1), stop('Error multiple values. Please only input one start and one end value'), c(start,end))
if (is.na(lubridate::ymd(start)) | is.na(lubridate::ymd(end))){
stop("Invalid data type - check input is in date format 'YYYY-MM-DD'")
}
if (start < data[1,1]| end > data[nrow(data),1]){
warning("Out of data date range.")
}
start = as.Date(start)
end = as.Date(end)
v1 = data[which.min(abs(start-data$Date)), 'CPI_Index']
v2 = data[which.min(abs(end-data$Date)), 'CPI_Index']
if (v1 == 0) {
cpi_change = paste('Unable to calculate percentage change as unable to divide by zero (CPI value is 0 in', start, ')')
}else{
change = ((v2-v1)/v1)*100
cpi_change = paste('The NZ CPI Index changed by', round(change,2), 'percent between', start, 'and', end)
}
return(cpi_change)
}
perc_change_cpi()
#change cpi between two dates
#perc_change_cpi('1998-09-01','1999-01-01') negative perc
perc_change_cpi <- function(start = data[1,1], end = data[nrow(data),1], data = nz_cpi_df){
ifelse((length(start) > 1 | length(end) > 1), stop('Error multiple values. Please only input one start and one end value'), c(start,end))
if (is.na(lubridate::ymd(start)) | is.na(lubridate::ymd(end))){
stop("Invalid data type - check input is in date format 'YYYY-MM-DD'")
}
if (start < data[1,1]| end > data[nrow(data),1]){
warning("Out of data date range.")
}
start = as.Date(start)
end = as.Date(end)
v1 = data[which.min(abs(start-data$Date)), 'CPI_Index']
v2 = data[which.min(abs(end-data$Date)), 'CPI_Index']
if (v1 == 0) {
cpi_change = paste('Unable to calculate percentage change as unable to divide by zero (CPI value is 0 in', start, ')')
}else{
change = ((v2-v1)/v1)*100
cpi_change = paste('The NZ CPI Index changed by', round(change,2), 'percent between', start, 'and', end)
}
return(cpi_change)
}
perc_change_cpi()
class(nz_cpi_df)
View(nz_cpi_data)
View(nz_cpi_data)
df = nz_cpi_df
perc_change_cpi <- function(start = data[1,1], end = data[nrow(data),1], data = df){
ifelse((length(start) > 1 | length(end) > 1), stop('Error multiple values. Please only input one start and one end value'), c(start,end))
if (is.na(lubridate::ymd(start)) | is.na(lubridate::ymd(end))){
stop("Invalid data type - check input is in date format 'YYYY-MM-DD'")
}
if (start < data[1,1]| end > data[nrow(data),1]){
warning("Out of data date range.")
}
start = as.Date(start)
end = as.Date(end)
v1 = data[which.min(abs(start-data$Date)), 'CPI_Index']
v2 = data[which.min(abs(end-data$Date)), 'CPI_Index']
if (v1 == 0) {
cpi_change = paste('Unable to calculate percentage change as unable to divide by zero (CPI value is 0 in', start, ')')
}else{
change = ((v2-v1)/v1)*100
cpi_change = paste('The NZ CPI Index changed by', round(change,2), 'percent between', start, 'and', end)
}
return(cpi_change)
}
perc_change_cpi()
perc_change_cpi <- function(start = data[1,1], end = data[nrow(data),1], data = nz_cpi_df()){
ifelse((length(start) > 1 | length(end) > 1), stop('Error multiple values. Please only input one start and one end value'), c(start,end))
if (is.na(lubridate::ymd(start)) | is.na(lubridate::ymd(end))){
stop("Invalid data type - check input is in date format 'YYYY-MM-DD'")
}
if (start < data[1,1]| end > data[nrow(data),1]){
warning("Out of data date range.")
}
start = as.Date(start)
end = as.Date(end)
v1 = data[which.min(abs(start-data$Date)), 'CPI_Index']
v2 = data[which.min(abs(end-data$Date)), 'CPI_Index']
if (v1 == 0) {
cpi_change = paste('Unable to calculate percentage change as unable to divide by zero (CPI value is 0 in', start, ')')
}else{
change = ((v2-v1)/v1)*100
cpi_change = paste('The NZ CPI Index changed by', round(change,2), 'percent between', start, 'and', end)
}
return(cpi_change)
}
perc_change_cpi()
#change cpi between two dates
#perc_change_cpi('1998-09-01','1999-01-01') negative perc
apply_cpi <- function(amount=100, start = data[1,1], end = data[nrow(data),1], data = nz_cpi_df(), full = TRUE){
ifelse((is.na(lubridate::ymd(start)) | is.na(lubridate::ymd(end))), stop("Invalid data type - check input is in date format 'YYYY-MM-DD'"), c(start,end))
ifelse((start < data[1,1] | end > data[nrow(data),1]), warning("Out of data date range."), c(start, end))
ifelse(is.na(as.numeric(amount)), stop("Check value to convert is numeric type"), amount)
amount = as.numeric(amount)
start = as.Date(start)
end = as.Date(end)
past = sapply(start, function(x) data[which.min(abs(x-data$Date)), 'CPI_Index'])
current = sapply(end, function(x) data[which.min(abs(x-data$Date)), 'CPI_Index'])
ifelse(past == 0, past <- 0.1, past)
worth = round(amount*current/past,2)
if (length(amount) <= 1 & length(start) <= 1 & length(end) <= 1 & full == TRUE){
return(paste(amount, 'dollars in', start, 'would have the same purchasing power as', worth, 'dollars in', end))
}else{
return(worth)
}
}
apply_cpi(start=c('2021-01-01','2022-01-01'), end=c('2022-01-01','2022-03-01','2022-06-01'))
#More recent dollars in terms of past dollars = Dollar Amount × Beginning-period CPI ÷ Ending-period CPI.
#vectors and single
#check only numeric
#pass in amoutn and dates and df, full=FALSE
#apply_cpi(c(100,200,'+100.11'))
apply_cpi <- function(amount=100, start = data[1,1], end = data[nrow(data),1], data = nz_cpi_data, full = TRUE){
ifelse((is.na(lubridate::ymd(start)) | is.na(lubridate::ymd(end))), stop("Invalid data type - check input is in date format 'YYYY-MM-DD'"), c(start,end))
ifelse((start < data[1,1] | end > data[nrow(data),1]), warning("Out of data date range."), c(start, end))
ifelse(is.na(as.numeric(amount)), stop("Check value to convert is numeric type"), amount)
amount = as.numeric(amount)
start = as.Date(start)
end = as.Date(end)
past = sapply(start, function(x) data[which.min(abs(x-data$Date)), 'CPI_Index'])
current = sapply(end, function(x) data[which.min(abs(x-data$Date)), 'CPI_Index'])
ifelse(past == 0, past <- 0.1, past)
worth = round(amount*current/past,2)
if (length(amount) <= 1 & length(start) <= 1 & length(end) <= 1 & full == TRUE){
return(paste(amount, 'dollars in', start, 'would have the same purchasing power as', worth, 'dollars in', end))
}else{
return(worth)
}
}
apply_cpi(start=c('2021-01-01','2022-01-01'), end=c('2022-01-01','2022-03-01','2022-06-01'))
#More recent dollars in terms of past dollars = Dollar Amount × Beginning-period CPI ÷ Ending-period CPI.
#vectors and single
#check only numeric
#pass in amoutn and dates and df, full=FALSE
#apply_cpi(c(100,200,'+100.11'))
perc_change_cpi <- function(start = data[1,1], end = data[nrow(data),1], data = nz_cpi_data){
ifelse((length(start) > 1 | length(end) > 1), stop('Error multiple values. Please only input one start and one end value'), c(start,end))
if (is.na(lubridate::ymd(start)) | is.na(lubridate::ymd(end))){
stop("Invalid data type - check input is in date format 'YYYY-MM-DD'")
}
if (start < data[1,1]| end > data[nrow(data),1]){
warning("Out of data date range.")
}
start = as.Date(start)
end = as.Date(end)
v1 = data[which.min(abs(start-data$Date)), 'CPI_Index']
v2 = data[which.min(abs(end-data$Date)), 'CPI_Index']
if (v1 == 0) {
cpi_change = paste('Unable to calculate percentage change as unable to divide by zero (CPI value is 0 in', start, ')')
}else{
change = ((v2-v1)/v1)*100
cpi_change = paste('The NZ CPI Index changed by', round(change,2), 'percent between', start, 'and', end)
}
return(cpi_change)
}
perc_change_cpi()
#change cpi between two dates
#perc_change_cpi('1998-09-01','1999-01-01') negative perc
apply_cpi <- function(amount=100, start = data[1,1], end = data[nrow(data),1], data = nz_cpi_df(), full = TRUE){
ifelse((is.na(lubridate::ymd(start)) | is.na(lubridate::ymd(end))), stop("Invalid data type - check input is in date format 'YYYY-MM-DD'"), c(start,end))
ifelse((start < data[1,1] | end > data[nrow(data),1]), warning("Out of data date range."), c(start, end))
ifelse(is.na(as.numeric(amount)), stop("Check value to convert is numeric type"), amount)
amount = as.numeric(amount)
start = as.Date(start)
end = as.Date(end)
past = sapply(start, function(x) data[which.min(abs(x-data$Date)), 'CPI_Index'])
current = sapply(end, function(x) data[which.min(abs(x-data$Date)), 'CPI_Index'])
ifelse(past == 0, past <- 0.1, past)
worth = round(amount*current/past,2)
if (length(amount) <= 1 & length(start) <= 1 & length(end) <= 1 & full == TRUE){
return(paste(amount, 'dollars in', start, 'would have the same purchasing power as', worth, 'dollars in', end))
}else{
return(worth)
}
}
apply_cpi(start=c('2021-01-01'), end=c('2022-01-01'))
#More recent dollars in terms of past dollars = Dollar Amount × Beginning-period CPI ÷ Ending-period CPI.
#vectors and single
#check only numeric
#pass in amoutn and dates and df, full=FALSE
#apply_cpi(c(100,200,'+100.11'))
nz_cpi_df <- function(cpi='consumers-price-index-june-quarter-2022-index-numbers.csv'){
if(!grepl("consumers\\-price\\-index.*index\\-numbers\\.csv$", basename(cpi))){ #check right file
stop('Incorrect file. See help on what file to use.')
}
df = read.csv(cpi)
df = df[df$Group == 'CPI All Groups for New Zealand',]
df['Date'] = gsub("\\.", "-", df$Period)
df['Date'] = gsub("$", "-01", df$Date)
df['Date'] = as.Date(df$Date, "%Y-%m-%d")
df$Data_value = na.locf(with(df, replace(Data_value,Data_value==0,NA)), fromLast = TRUE) #replace 0 CPI values with previous quarters value
colnames(df)[colnames(df)  == 'Data_value'] = 'CPI_Index'
rownames(df) = 1:nrow(df)
df = df[c('Date','CPI_Index')]
return(df)
}
df = nz_cpi_df()
class(df)
#reads in cpi file  reformats date , fills in missing earlier data and gives index for all groups
#takes in other files of that name if you dont want to use the default file
#checks if right file name
#uses default 2022 file for data
#exmaple defualt, wrong cpi, right cpi
df
0/1
0/0
devtools::document()
devtools::document()
devtools::document()
devtools::document()
0/0
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
